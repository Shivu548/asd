-- 1. List all the products
SELECT * FROM PRODUCT;

-- 2. List product name and product price

-- 3. List all customers

-- 4. List Customername and mobile no

-- 5. List all orders

-- 6. List customer id and orderd date

-- 7. List all the order item

-- 8. List all the product with product id 100

-- 9. List all the info of product with name Vivo V3

-- 10. List pid, productname, price of the phone named "Samsung GalaxyNote-4"

-- 11. Print product info for all the product with category id 2003

-- 12. List all the customers address with city as 'Bangalore'

-- 13. List all the orders which was ordered on '2013-02-02'

-- 14. Print all the orders of the customer with id 1

-- 15. List all the product with company id 1001 or 1002

-- 16. List all the product with price more than 30000

-- 17. List all the products of the category id 2001 or 2003 with
-- the price more than 30000

-- 18. List all the order customer id 1 or 4 ordered on '2013-02-02'
-- or '2013-02-07'

-- 19. List all the customer whos name starts with character 'A'

-- 20. List all the customer who name ends with character 'i'

-- 21. List all the customer whos name starts with 'R' and ends with 'i'

-- 22. List all the orders for the year 2013

-- 23. List all the products which are not from the category 10001

-- 24. List all the products which are not from the category 10001
-- or 10003 with the price more than 30000 and product name starts
-- with '6'

-- 25. List all the customers whos mobile no doesnt start with 9

-- 26. List all the nokia phones

-- 27. List all the samsung phones

-- 28. List all the iphone phones

-- 29. List all the customers from Bangalore

-- 30. List all the customers who are not from Bangalore

-- 31. List all the customer who have orderd on the date '2013-02-02'

-- 32. List all the customer who have orderd for phone '6S'

-- 33. List all the customers who have ordered for Apple I-Pad Mini from bangalore

-- 34. List all the phones which Goutham orderd for

-- 35. List all the phones which Amrutha orderd for in the 2014

-- 36. List all the customer who have not bought any product

-- 37. List Fav phones of Bangalorean

-- 38. List all the products which were sold in the year 2013

-- 39. List all the Nokia phones orderd by 'Ravi'

-- 40. List all the phones with its company name

-- 41. List companyid, companyname, productname, product price of all products

-- 42. List customer name, stname and city of all the customer.

-- 43. List customer name and customer city of all the customer
-- who have never bought any product

-- 44. List Customer id, customer name, orderdate, of all the orders

-- 45. List Customer id, customer name, orderdate, company and
-- product name with qty, price of all the orders

-- 46. List Customer id, customer name, orderdate, company and
-- product name with qty, price and amount of all the orders
-- where amount is qty*price

/* 47. List Customer id, customer name, orderdate, company and
product name with qty, price and amount of all the orders
where amount > 50,000 (amount is qty*price) */

/* 48. List customerid, customername, city, companyname, productname,
qty, price and amount of all the products orderd */

/* 49. List all product, company, customer and
customer address details for all orders
which were ordered in the year 2014
*/

/* 50. Update amount of order item */

/* 51. Get the total sales based on orderid */

/* 52. Get the total sales based on given month */

/* 53. Get the total sales based on year */

/* 54. Get the total sales based on month and year */

/* 55. Total sales based on product */

/* 56. Total sales based on company */

/* 57. Display top 3 sold mobiles */

/* 58. Top 3 customers based on billing amount */

/* 59. Top 3rd customer based on billing amount */

/* 60. Display all unique phones which are sold */

/* 61. Display all phones which are sold with the no. of quantity */

/* 62. Name of the top priced phone */


https://www.mongodb.org/downloads
package com.company;
//import java.util.Random;

import java.util.Scanner;

public class RandomNumber {
    static String[] names = new String[1001];
    static int n;
    public static void input(){
        System.out.println("Enter the number of elements that you want to input");
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();

        for(int i = 0; i<n;i++){
            names[i] = sc.next();
        }
        System.out.println("Insertion Successful");

    }
    public static void output(){
        if(n==0){
            System.out.println("ARRAY is Empty");
        }
        else{
            for(int i =0;i<n;i++){
                System.out.println(names[i]);
            }
        }
    }
    public static void search(){
        System.out.println("Enter the key");
        Scanner sc  = new Scanner(System.in);
        String key = sc.nextLine();
        int i = 0;
        for(i = 0;i< n;i++){
            //System.out.println(names[i].equals(key));
            if(names[i].equals(key)){
                System.out.println("The name you're searching is found at "+(i+1)+"th position");
            }
        }


    }
    public static void update(){
        System.out.println("Enter the name you want to update");
        Scanner sc  = new Scanner(System.in);
        String key = sc.next();
        int i = 0;
        for(i = 0;i< n;i++){
            if(names[i].equals(key)){
                System.out.println("Enter the new name");
                String newname = sc.next();
                names[i] = newname;
                System.out.println("Updation successful");
            }
        }

    }
    public static void main(String[] args){
      /*  int min = 200;
        int max = 400;
//Generate random double value from 200 to 400
        System.out.println("Random value of type double between "+min+" to "+max+ ":");
        double a = Math.random()*(max-min+1)+min;
        System.out.println(a);
        min = 100;
        max = 500;
        int ab = (int)(Math.random()*(max-min+1)+min);
        System.out.println(ab); */
        /*int[] array1 = new int[1000000];
        System.out.println("Executed");*/
        while(true){
            System.out.println("Enter the options. We are trying array operations");
            System.out.println("1)Input\n2)Output\n3)Search\n4)Update\n5)Exit");
            Scanner sc = new Scanner(System.in);
            int c = sc.nextInt();
            switch(c){
                case 1: input();
                break;
                case 2: output();
                break;
                case 3: search();
                break;
                case 4:update();
                break;
                case 5:System.exit(0);
                default:System.out.println("Wrong input");
            }


        }
    }
}
