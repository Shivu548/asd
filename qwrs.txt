mport org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;
class ContactManagerTest {
    private static ContactManager contactManager;
    @BeforeAll
    public static void setupAll(){
        System.out.println("Should Print Before All Tests");
    }
    @BeforeEach
    public void setup(){
        System.out.println("Instantiating Contact Manager");
        contactManager = new ContactManager();
    }


    @Test
    @DisplayName("Should Create Contact")
    public void shouldCreateContact(){
        contactManager.addContact("hemanth","km","0123456789");
        Assertions.assertFalse(contactManager.getAllContacts().isEmpty());
        Assertions.assertEquals(1,contactManager.getAllContacts().size());
    }

    @Test
    @DisplayName("Should Not create Contact When First name is Null")
    public void shouldThrowErrorWhenFirstNameIsNull(){
        Assertions.assertThrows(RuntimeException.class, ()->{
            contactManager.addContact(null,"km","0123456789");
        });
    }
    @Test
    @DisplayName("Should Not create Contact When Last name is Null")
    public void shouldThrowErrorWhenLastNameIsNull(){
        Assertions.assertThrows(RuntimeException.class, ()->{
            contactManager.addContact("hemanth",null,"0123456789");
        });
    }
    @Test
    @DisplayName("Should Not create Contact When Phone Number is Null")
    public void shouldThrowErrorWhenPhoneNumberIsNull(){
        Assertions.assertThrows(RuntimeException.class, ()->{
            contactManager.addContact("hemanth","k m",null);
        });
    }
    @AfterEach
    public void finish(){
        System.out.println("Should Execute after Each Test");
    }

    @AfterAll
    public static void finishAll(){
        System.out.println("Should execute at the End of the Test");
    }


}
